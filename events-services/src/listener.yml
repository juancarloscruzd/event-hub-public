Description: >

    This template deploys the EventServices Listener Lambda function, responsible to receive events from the Intake queue and forward them to the Dispatcher.

    Last Modified: 2018
    Author: Kiko Gatto 

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
    EventIntakeURL:
        Description: The event intake queue URL, where events will be deleted after processed
        Type: String
    EventIntakeARN:
        Description: The event intake queue ARN, to authorize the Role
        Type: String
    DispatcherLambdaARN:
        Description: The dispatcher lambda function
        Type: String

Resources:
    ListenerLambdaRole: 
        Type: AWS::IAM::Role
        Properties: 
            AssumeRolePolicyDocument: 
                Version: '2012-10-17'
                Statement: 
                - Effect: Allow
                  Principal: 
                      Service: lambda.amazonaws.com
                  Action: 
                       - sts:AssumeRole
            Path: '/'
            Policies: 
            - PolicyName: logs
              PolicyDocument: 
                  Statement: 
                  - Effect: Allow
                    Action: 
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    Resource: arn:aws:logs:*:*:*
            - PolicyName: sqs
              PolicyDocument: 
                  Statement: 
                  - Effect: Allow
                    Action: 
                    - sqs:ReceiveMessage
                    Resource: !Ref EventIntakeARN
            - PolicyName: lambda
              PolicyDocument: 
                  Statement: 
                  - Effect: Allow
                    Action: 
                    - lambda:InvokeFunction
                    Resource: !Ref DispatcherLambdaARN
    ListenerLambda:
        Type: "AWS::Lambda::Function"
        Properties:
            Code: 
                S3Bucket: !Sub
                  - ${StackName}-events 
                  - { StackName: !Ref EnvironmentName }
                S3Key: "listener.zip"

            Handler: index.handler
            MemorySize: 128
            Role: !Sub ${ListenerLambdaRole.Arn}
            Runtime: nodejs6.10
            Timeout: 60
            Environment:
                Variables:
                    TASK_QUEUE_URL: !Ref EventIntakeURL
                    EVENT_DISPATCHER_WORKER : !Ref DispatcherLambdaARN

    ScheduledRule: 
        Type: "AWS::Events::Rule"
        Properties: 
            Description: "ScheduledRule"
            ScheduleExpression: "rate(1 minutes)"
            State: "ENABLED"
            Targets: 
              - 
                Arn: 
                  Fn::GetAtt: 
                    - "ListenerLambda"
                    - "Arn"
                Id: "TargetFunctionV1"

    PermissionForEventsToInvokeLambda: 
        Type: "AWS::Lambda::Permission"
        Properties: 
            FunctionName: 
                Ref: "ListenerLambda"
            Action: "lambda:InvokeFunction"
            Principal: "events.amazonaws.com"
            SourceArn: 
                Fn::GetAtt: 
                  - "ScheduledRule"
                  - "Arn"
