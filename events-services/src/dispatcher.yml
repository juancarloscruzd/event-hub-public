Description: >

    This template deploys the EventServices Dispatcher Lambda function, responsible to route all received events to all subscribers.

    Last Modified: 2018
    Author: Kiko Gatto 

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
    PublishedQueueUrl:
        Description: The published event queue URL, where events will be deleted after processed
        Type: String
    PublishedQueueARN:
        Description: The published event queue ARN, to authorize the Role
        Type: String

Resources:
    DispatcherLambdaRole: 
        Type: AWS::IAM::Role
        Properties: 
            AssumeRolePolicyDocument: 
                Version: '2012-10-17'
                Statement: 
                - Effect: Allow
                  Principal: 
                      Service: lambda.amazonaws.com
                  Action: 
                       - sts:AssumeRole
            Path: '/'
            Policies: 
            - PolicyName: logs
              PolicyDocument: 
                  Statement: 
                  - Effect: Allow
                    Action: 
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    Resource: arn:aws:logs:*:*:*
            - PolicyName: PublishQueueCleaner
              PolicyDocument: 
                  Statement: 
                  - Effect: Allow
                    Action: 
                    - sqs:DeleteMessage
                    Resource: !Ref PublishedQueueARN

    DispatcherLambda:
        Type: "AWS::Lambda::Function"
        Properties:
            Code: 
                S3Bucket: !Sub
                  - ${StackName}-events 
                  - { StackName: !Ref EnvironmentName }
                S3Key: "events.zip"

            Handler: events-services/src/dispatcher.handler
            MemorySize: 128
            Role: !Sub ${DispatcherLambdaRole.Arn}
            Runtime: nodejs6.10
            Timeout: 60
            Environment:
                Variables:
                    PUBLISHED_QUEUE_URL: !Ref PublishedQueueUrl


    Listener:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub 
                - https://s3.amazonaws.com/${StackName}-events/listener.yml 
                - { StackName: !Ref EnvironmentName }
            Parameters:
                EnvironmentName:    !Ref EnvironmentName
                PublishedQueueUrl:    !Ref PublishedQueueUrl
                PublishedQueueARN:    !Ref PublishedQueueArn
                DispatcherLambdaARN:  !GetAtt DispatcherLambda

# Outputs: 

#     DispatcherLambdaID: 
#         Description: the ID for the DispatcherLambda
#         Value: 
#             Ref: "DispatcherLambda"
#     DispatcherLambdaARN: 
#         Description: the ARN for the DispatcherLambda
#         Value: 
#             Fn::GetAtt:
#                 - "DispatcherLambda"
#                 - "Arn"